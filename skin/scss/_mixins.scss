//
// @see https://gist.github.com/garyharan/957284
//

@mixin boxshadow($size: 0px, $color: rgba(black, 0.5), $blur: 5px, $horizontaloffset: 3px, $verticaloffset: 3px)
{
	-webkit-box-shadow: $horizontaloffset $verticaloffset $blur $size $color;
	-moz-box-shadow: $horizontaloffset $verticaloffset $blur $size $color;
	box-shadow: $horizontaloffset $verticaloffset $blur $size $color;
}

@mixin textshadow($horizontaloffset, $verticaloffset, $spread, $color: white)
{
	text-shadow: $horizontaloffset $verticaloffset $spread $color;
}

@mixin backgroundgradient($directionfrom: left top, $from: white, $todirection: right bottom, $to: gray)
{
	background-image: -webkit-gradient(linear, $directionfrom, $todirection, from($from), to($to));
	background-image: -webkit-linear-gradient($directionfrom, $from, $to); /* directionfrom was "top" */
	background-image: -moz-linear-gradient($directionfrom,  $from, $to);
	background-image: -webkit-linear-gradient($directionfrom, $from, $to);
	background-image:    -moz-linear-gradient($directionfrom, $from, $to);
	background-image:     -ms-linear-gradient($directionfrom, $from, $to);
	background-image:      -o-linear-gradient($directionfrom, $from, $to);
	background-image:         linear-gradient($directionfrom, $from, $to);
}

@mixin bordergradient()
{

}
//
// @see http://zerosixthree.se/8-sass-mixins-you-must-have-in-your-toolbox/
//

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }  
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }  
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

@mixin transform($transforms) {
	   -moz-transform: #{$transforms};
	     -o-transform: #{$transforms};
	    -ms-transform: #{$transforms};
	-webkit-transform: #{$transforms};
          transform: #{$transforms};
}

// @see http://www.sitepoint.com/building-linear-gradient-mixin-sass/
@mixin lineargradient($direction, $color-stops...) {
  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

// @see http://codepen.io/sawmac/pen/cayhK
@mixin transition($transition...) {
  -moz-transition:    $transition;
  -o-transition:      $transition;
  -webkit-transition: $transition;
  transition:         $transition;
}
@mixin transition-property($property...) {
  -moz-transition-property:    $property;
  -o-transition-property:      $property;
  -webkit-transition-property: $property;
  transition-property:         $property;
}
@mixin transition-duration($duration...) {
  -moz-transition-property:    $duration;
  -o-transition-property:      $duration;
  -webkit-transition-property: $duration;
  transition-property:         $duration;
}
@mixin transition-timing-function($timing...) {
  -moz-transition-timing-function:    $timing;
  -o-transition-timing-function:      $timing;
  -webkit-transition-timing-function: $timing;
  transition-timing-function:         $timing;
}
@mixin transition-delay($delay...) {
  -moz-transition-delay:    $delay;
  -o-transition-delay:      $delay;
  -webkit-transition-delay: $delay;
  transition-delay:         $delay;
}

/**
 @see https://medium.com/@dave_lunny/animating-css-gradients-using-only-css-d2fd7671e759#.jlbdgs4jl
 @since 20151231
 
 this is a mixin that will animate between two gradients.  the gradients are
 generated at run time using the backgroundgradient mixin and are based on
 variables in _vars.scss.
*/
@mixin gradientanimation($start, $end, $transTime) {
  background-size: 100%;
  @include backgroundgradient($start, $end);
  position: relative;
  z-index: 100;
  &:before {
    @include backgroundgradient($end, $start);
    content: '';    
    display: block;
    height: 100%;
    position: absolute;
    top: 0; left: 0;
    opacity: 0;
    width: 100%;
    z-index: -100;
    transition: opacity $transTime;
  }
  &:hover {
     &:before {
       opacity: 1; 
     }
  }
}
